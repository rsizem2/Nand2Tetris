function Ball.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push constant 20
pop this 8
push this 8
push constant 1
add
pop this 4
push constant 512
push this 4
sub
pop this 5
push constant 12
push this 8
add
pop this 6
push constant 256
push this 4
sub
pop this 7
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.get_x 0
push argument 0
pop pointer 0
push this 0
return
function Ball.get_y 0
push argument 0
pop pointer 0
push this 1
return
function Ball.flip_x 0
push argument 0
pop pointer 0
push this 2
neg
pop this 2
push constant 0
return
function Ball.flip_y 0
push argument 0
pop pointer 0
push this 3
neg
pop this 3
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Ball.erase 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 8
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 8
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 8
call Screen.drawCircle 3
pop temp 0
push this 0
push this 2
add
push this 5
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
pop this 0
push this 2
neg
pop this 2
goto IF_END0
label IF_FALSE0
push this 0
push this 2
add
push this 4
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
pop this 0
push this 2
neg
pop this 2
goto IF_END1
label IF_FALSE1
push this 0
push this 2
add
pop this 0
label IF_END1
label IF_END0
push this 1
push this 3
add
push this 7
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
pop this 1
push this 3
neg
pop this 3
goto IF_END2
label IF_FALSE2
push this 1
push this 3
add
push this 6
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
pop this 1
push this 3
neg
pop this 3
goto IF_END3
label IF_FALSE3
push this 1
push this 3
add
pop this 1
label IF_END3
label IF_END2
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 8
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.collide 2
push argument 0
pop pointer 0
push this 0
push argument 1
call Ball.get_x 1
sub
call Math.abs 1
pop local 0
push this 1
push argument 1
call Ball.get_y 1
sub
call Math.abs 1
pop local 1
push local 0
push local 1
add
push constant 2
push this 8
call Math.multiply 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Ball.flip_x 1
pop temp 0
push argument 1
call Ball.flip_y 1
pop temp 0
push pointer 0
call Ball.flip_x 1
pop temp 0
push pointer 0
call Ball.flip_y 1
pop temp 0
label IF_FALSE0
push constant 0
return
